 typedef union {
  tAVRC_HDR hdr;           /* Message header. */
  tAVRC_MSG_UNIT unit;     /* UNIT INFO message. */
  tAVRC_MSG_SUB sub;       /* SUBUNIT INFO message. */
  tAVRC_MSG_VENDOR vendor; /* VENDOR DEPENDENT message. */
  tAVRC_MSG_PASS pass;     /* PASS THROUGH message. */
  tAVRC_MSG_BROWSE browse; /* messages thru browsing channel */
} tAVRC_MSG;

 typedef struct {
  tAVRC_HDR hdr;        /* hdr.ctype Unused.
                         * hdr.subunit_type Unused.
                         * hdr.subunit_id Unused. */
  uint8_t op_id;        /* Operation ID.  */
  uint8_t state;        /* Keypress state.  */
  uint8_t* p_pass_data; /* Pointer to data.  This parameter is only valid
                         * when the op_id is AVRC_ID_VENDOR.*/
  uint8_t pass_len;     /* Length in bytes of data. This parameter is only
                         * valid when the op_id is AVRC_ID_VENDOR.*/
} tAVRC_MSG_PASS;
 typedef struct {
  tAVRC_HDR hdr; /* Message header. */
  uint8_t subunit_type[AVRC_SUB_TYPE_LEN];
  /* Array containing subunit type values.  */
  bool panel;   /* true if the panel subunit type is in the
                 * subunit_type array, false otherwise. */
  uint8_t page; /* Specifies which part of the subunit type table is
                 * returned.  For AVRCP it is typically zero.
                 * Value range is 0-7. */
} tAVRC_MSG_SUB;
